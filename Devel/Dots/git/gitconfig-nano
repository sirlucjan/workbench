[user]
	name = Piotr Gorski
	username = sirlucjan
	email = lucjan.lucjanov@gmail.com
	signingkey = BDB26C5A

[core]
	editor = nano
	whitespace = fix,-indent-with-non-tab,trailing-space,cr-at-eol
	excludesfile = ~/.gitignore
	pager = delta

[column]
	ui = auto

[branch]
	sort = -committerdate
	autosetupmerge = always
	autosetuprebase = always

[commit]
	gpgSign = true

[tag]
	gpgSign = true
	sort = version:refname

[init]
	defaultBranch = master

[checkout]
	defaultRemote = origin

[protocol "file"]
	allow = always

[sendemail]
	chainreplyto = false
	smtpencryption = tls
	smtpserver = smtp.gmail.com
	smtpserverport = 587
	smtpuser = lucjan.lucjanov@gmail.com

[include]
	path = ~/.gitpasswd

[url "https://aur.archlinux.org/"]
	insteadOf = aur:

[url "ssh://aur@aur.archlinux.org/"]
	insteadOf = aurs:

[url "https://github.com/"]
	insteadOf = github:

[url "https://gitlab.com/"]
	insteadOf = gitlab:

[url "https://codeberg.org/"]
	insteadOf = codeberg:

[url "https://gitlab.archlinux.org/"]
	insteadOf = archlinux:

[url "https://invent.kde.org/"]
	insteadOf = kde:

[url "https://gitlab.freedesktop.org/"]
	insteadOf = freedesktop:

[url "git@github.com:"]
	insteadOf = githubs:
	pushInsteadOf = github:
	pushInsteadOf = https://github.com/

[url "git@gitlab.com:"]
	insteadOf = gitlabs:
	pushInsteadOf = gitlab:
	pushInsteadOf = https://gitlab.com/

[url "git@codeberg.org:"]
	insteadOf = codebergs:
	pushInsteadOf = codeberg:
	pushInsteadOf = https://codeberg.org/

[url "git@gitlab.archlinux.org:"]
	insteadOf = archlinuxs:
	pushInsteadOf = archlinux:
	pushInsteadOf = https://gitlab.archlinux.org/

[url "git@invent.kde.org:"]
	insteadOf = kdes:
	pushInsteadOf = kde:
	pushInsteadOf = https://invent.kde.org/

[url "git@gitlab.freedesktop.org:"]
	insteadOf = freedesktops:
	pushInsteadOf = freedesktop:
	pushInsteadOf = https://gitlab.freedesktop.org/

[rerere]
	enabled = 1
	autoupdate = 1

[diff]
	algorithm = histogram
	colorMoved = plain
	renames = true
	tool = nvimdiff

[difftool]
	prompt = false

[push]
	autoSetupRemote = true
	followTags = true

[fetch]
	prune = true
	pruneTags = true
	all = true

[rebase]
	autoSquash = true
	updateRefs = true

[pull]
	rebase = true

[color]
	ui = auto

[color "branch"]
	current = yellow bold
	local = green bold
	remote = cyan bold

[color "diff"]
	meta = yellow bold
	frag = magenta bold
	old = red bold
	new = green bold
	whitespace = red reverse

[color "status"]
	added = green bold
	changed = yellow bold
	untracked = red bold

[delta]
	features = line-numbers decorations
	line-numbers = true

[delta "decorations"]
	minus-style = red bold normal
	plus-style = green bold normal
	minus-emph-style = white bold red
	minus-non-emph-style = red bold normal
	plus-emph-style = white bold green
	plus-non-emph-style = green bold normal
	file-style = yellow bold none
	file-decoration-style = yellow box
	hunk-header-style = magenta bold
	hunk-header-decoration-style = magenta box
	minus-empty-line-marker-style = normal normal
	plus-empty-line-marker-style = normal normal
	line-numbers-right-format = "{np:^4}â”‚ "

[trim]
	bases = master,main
	protected = *production

[sequence]
	editor = interactive-rebase-tool

[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true

[alias]
	a = add --all
	ai = add -i
	#############
	ap = apply
	as = apply --stat
	ac = apply --check
	#############
	ama = am --abort
	amr = am --resolved
	amc = am -s
	amcc = am -S
	amcs = am -S -s
	ams = am --skip
	#############
	b = branch
	ba = branch -a
	bd = branch -d
	bdd = branch -D
	br = branch -r
	bc = rev-parse --abbrev-ref HEAD
	bu = !git rev-parse --abbrev-ref --symbolic-full-name "@{u}"
	bs = !git-branch-status
	#############
	bl = blame -w
	bll = blame -w -L
	blm = blame -w -C -C -C
	blml = blame -w -C -C -C -L
	#############
	c = commit
	ca = commit -a
	cac = commit -a -s
	cas = commit -a -S
	cass = commit -a -S -s
	cm = commit -m
	cmc = commit -s -m
	cms = commit -S -m
	cmss = commit -S -s -m
	cam = commit -am
	camc = commit -s -am
	cams = commit -S -am
	camss = commit -S -s -am
	cem = commit --allow-empty -m
	cd = commit --amend
	cad = commit -a --amend
	ced = commit --allow-empty --amend
	#############
	cl = clone
	clb = clone -b
	clbs = clone --single-branch -b
	clc = clone --bare
	cld = clone --depth 1
	cl = clone
	cld = clone --depth 1
	clg = !sh -c 'git clone https://github.com/$1' -
	clgp = !sh -c 'git clone git@github.com:$1' -
	clsp = !sh -c 'git clone git@git.sr.ht:~$1' -
	clgu = !sh -c 'git clone git@github.com:$(git config --get user.username)/$1' -
	clsu = !sh -c 'git clone git@git.sr.ht:~$(git config --get user.username)/$1' -
	clm = clone --mirror
	#############
	cpi = cherry-pick
	cpia = cherry-pick --abort
	cpico = cherry-pick --continue
	cpics = cherry-pick -s
	cpis = cherry-pick -S
	cpiss = cherry-pick -S -s
	cpin = cherry-pick -n
	cpie = cherry-pick -e
	#############
	d = diff
	dp = diff --patience
	dc = diff --cached
	dk = diff --check
	dkc = diff --cached --check
	dt = difftool
	dtc = difftool --cached
	dw = diff --word-diff
	#############
	f = fetch
	fo = fetch origin
	fu = fetch upstream
	#############
	fp = format-patch
	fps = format-patch --stdout
	#############
	fk = fsck
	#############
	g = grep -p
	#############
	i = init
	ib = init --bare
	ibq = init --bare --quiet
	iq = init --quiet
	#############
	l = log --oneline
	lg = log --oneline --graph --decorate
	ll = log -L
	lf = log -S
	#############
	ls = ls-files
	lsf = !git ls-files | grep -i
	#############
	m = merge
	ma = merge --abort
	mc = merge --continue
	ms = merge --skip
	me = merge --no-edit
	mn = merge --no-commit
	mq = merge --squash
	#############
	o = checkout
	om = checkout master
	oma = checkout main
	ob = checkout -b
	opr = !sh -c 'git fo pull/$1/head:pr-$1 && git o pr-$1'
	#############
	prv = prune -v
	#############
	ps = push
	psf = push --force-with-lease
	psm = push --mirror
	psu = push -u
	pst = push --tags
	#############
	pso = push origin
	psao = push --all origin
	psfo = push --force-with-lease origin
	psuo = push -u origin
	#############
	psom = push origin master
	psaom = push --all origin master
	psfom = push --force-with-lease origin master
	psuom = push -u origin master
	psoma = push origin main
	psaoma = push --all origin main
	psfoma = push --force-with-lease origin main
	psuoma = push -u origin main
	psoc = !git push origin $(git bc)
	psaoc = !git push --all origin $(git bc)
	psfoc = !git push --force-with-lease origin $(git bc)
	psuoc = !git push -u origin $(git bc)
	psdc = !git push origin :$(git bc)
	#############
	pl = pull
	pb = pull --rebase
	pm = pull --rebase=false
	#############
	plo = pull origin
	pbo = pull --rebase origin
	plom = pull origin master
	ploma = pull origin main
	ploc = !git pull origin $(git bc)
	pbom = pull --rebase origin master
	pboma = pull --rebase origin main
	pboc = !git pull --rebase origin $(git bc)
	#############
	plu = pull upstream
	plum = pull upstream master
	pluma = pull upstream main
	pluc = !git pull upstream $(git bc)
	pbum = pull --rebase upstream master
	pbuma = pull --rebase upstream main
	pbuc = !git pull --rebase upstream $(git bc)
	#############
	rb = rebase
	rba = rebase --abort
	rbc = rebase --continue
	rbi = rebase --interactive
	rbs = rebase --skip
	#############
	re = reset
	rh = reset HEAD
	reh = reset --hard
	rem = reset --mixed
	res = reset --soft
	rehh = reset --hard HEAD
	remh = reset --mixed HEAD
	resh = reset --soft HEAD
	rehom = reset --hard origin/master
	rehoma = reset --hard origin/main
	#############
	r = remote
	ra = remote add
	rr = remote rm
	rv = remote -v
	rn = remote rename
	rp = remote prune
	rs = remote show
	rao = remote add origin
	rau = remote add upstream
	rro = remote remove origin
	rru = remote remove upstream
	rso = remote show origin
	rsu = remote show upstream
	rpo = remote prune origin
	rpu = remote prune upstream
	#############
	rev = revert
	reve = revert --no-edit
	revn = revert -n
	revc = revert -s
	revce = revert -s --no-edit
	revs = revert -S
	revse = revert -S --no-edit
	revss = revert -S -s
	revsse = revert -S -s --no-edit
	revsk = revert --skip
	reva = revert --abort
	#############
	rmf = rm -f
	rmrf = rm -r -f
	#############
	s = status
	sb = status -s -b
	#############
	sa = stash apply
	sc = stash clear
	sd = stash drop
	sl = stash list
	sp = stash pop
	ss = stash save
	ssk = stash save -k
	sw = stash show
	st = !git stash list | wc -l 2>/dev/null | grep -oEi '[0-9][0-9]*'
	#############
	t = tag
	td = tag -d
	#############
	w = show
	#############
	wa = worktree add
	wl = worktree list
	wp = worktree prune
	wr = worktree remove
	wx = worktree repair
	#############
	subadd = !sh -c 'git submodule add https://github.com/$1 $2/$(basename $1)' -
	subrm = !sh -c 'git submodule deinit -f -- $1 && rm -rf .git/modules/$1 && git rm -f $1' -
	subup = submodule update --init --recursive
	subpull = submodule foreach 'git pull --tags -f origin master || git pull --tags -f origin main || git pull --tags -f origin development'
	subsync = submodule sync --recursive
	#############
	assume = update-index --assume-unchanged
	unassume = update-index --no-assume-unchanged
	assumed = !git ls -v | grep ^h | cut -c 3-
	unassumeall = !git assumed | xargs git unassume
	assumeall = !git status -s | awk {'print $2'} | xargs git assume
	#############
	bump = !sh -c 'git commit -am \"Version bump v$1\" && git psuoc && git releases $1' -
	releases = !sh -c 'git tag v$1 && git pst' -
	unreleases = !sh -c 'git tag -d v$1 && git pso :v$1' -
	merged = !sh -c 'git om && git plom && git trim'
	mergeda = !sh -c 'git oma && git ploma && git trim'
	aliases = !git config -l | grep alias | cut -c 7-
	snap = !git stash save 'snapshot: $(date)' && git stash apply 'stash@{0}'
	bare = !sh -c 'git symbolic-ref HEAD refs/heads/$1 && git rm --cached -r . && git clean -xfd' -
	whois = !sh -c 'git log -i -1 --author=\"$1\" --pretty=\"format:%an <%ae>\"' -
	serve = daemon --reuseaddr --verbose --base-path=. --export-all ./.git
	backports = "!f() { git log --format='%H # %s' -$1 --reverse; }; f"
	reverts = "!f() { git log --format='%H # %s' -$1; }; f"
	add-upstream = "!f() { git remote add upstream \"$1\" && git remote set-url --push upstream no_push; }; f"
	ignore = !sh -c 'echo "$1" >> .git/info/exclude' -
	#############
	behind = !git rev-list --left-only --count $(git bu)...HEAD
	ahead = !git rev-list --right-only --count $(git bu)...HEAD
	#############
	ours = "!f() { git checkout --ours $@ && git add $@; }; f"
	theirs = "!f() { git checkout --theirs $@ && git add $@; }; f"
	subrepo = !sh -c 'git filter-branch --prune-empty --subdirectory-filter $1 master' -
	subrepoa = !sh -c 'git filter-branch --prune-empty --subdirectory-filter $1 main' -
	human = name-rev --name-only --refs=refs/heads/*

[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
