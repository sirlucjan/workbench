# Maintainer: Piotr Gorski <lucjan.lucjanov@gmail.com>
# Maintainer: Giancarlo Razzolini <grazzolini@archlinux.org>
# Maintainer: Dave Reisner <dreisner@archlinux.org>
# Maintainer: Thomas BÃ¤chler <thomas@archlinux.org>

pkgname=mkinitcpio-lucjan
_pkgname=mkinitcpio
pkgver=31
pkgrel=6
pkgdesc="Modular initramfs image creation utility"
arch=('any')
url='https://github.com/archlinux/mkinitcpio'
license=('GPL')
depends=('awk' 'mkinitcpio-busybox>=1.19.4-2' 'kmod' 'util-linux>=2.23' 'libarchive' 'coreutils'
         'bash' 'binutils' 'diffutils' 'findutils' 'grep' 'filesystem>=2011.10-1' 'zstd' 'systemd')
makedepends=('asciidoc')
optdepends=('gzip: Use gzip compression for the initramfs image'
            'xz: Use lzma or xz compression for the initramfs image'
            'bzip2: Use bzip2 compression for the initramfs image'
            'lzop: Use lzo compression for the initramfs image'
            'lz4: Use lz4 compression for the initramfs image'
            'mkinitcpio-nfs-utils: Support for root filesystem on NFS')
replaces=('mkinitcpio-zstd')
provides=('initramfs' 'initramfs-lucjan' 'initramfs-zstd' "mkinitcpio=$pkgver")
conflicts=('mkinitcpio')
backup=('etc/mkinitcpio.conf')
source=("https://sources.archlinux.org/other/$_pkgname/$_pkgname-$pkgver.tar.gz"{,.sig}
        '0001-Merge-mkinitcpio-libalpm-scripts-into-one.patch'
        '0002-functions-allow-tailing-for-custom-kernel-build-upon.patch'
        '0003-Fix-ability-to-manually-specify-uefistub.patch'
        '0004-Add-support-for-post-generation-hooks.patch'
        '0005-Allow-overriding-hooks.patch'
        '0006-mkinitcpio-add-VERSION_ID-to-EFISTUB.patch'
        '0007-functions-no-progress-for-zstd-decompression.patch'
        '0008-mkinitcpio-Support-etc-kernel-cmdline.d.patch'
        '0009-presets-when-using-_efi_image-make-_image-optional.patch')
install=mkinitcpio.install
sha512sums=('4ef87c2e4f579b292c38f9c487e78b3b99f6db77909cab322e860e5ca70aca3747fcfc272e2e15c9a3605c924ab178057b8b23151f98debc5d96e65f3c0c49d5'
            'SKIP'
            'a63a0b8ae37a9a4dcbea49a0a53804af7f349b39f8f83861fab826ff3274d294766f808cbc05887591b7f4c5d8f22c733645e8323019c7ff974704faecd6314d'
            'a3f2336381603ccb7f7a8be5f9d70385e91d4876fc768ffee44f7eb8d7cdbf483335a4bc643a311a9efcb7e1bec490a5efbb656c951220f67a4585b31a23e1d7'
            '013925157e954caaccb87f121aeb2028ad3b578a291bf8b9471fb403429f3d5a0baa29caecd5d89f2220c28cfc389914b61ce379080f572bce54c966b5ef89b3'
            '65763839ea4800434ea779aa126e0db24145f38d49126b8494d6fa8d8834516a2ffe656d2ed90337e8e84a1c40353cf7747861e8c6f07a4bc671babc311d8ea2'
            '7de67082cb86d3eb822ee9a515f10a0f4509e72b76f3c7ee0b9e6a4586e7bd04eee3d223ccb1b0459ab1937c5e9a65308f5acb431f77fddc69306197d3f64ce7'
            '7e38ef62479791fb2e64648a72ccd4115a859fc409e8e8a0967a9580cce028da1a0e9a2faa1ec2d65d301505a311dca83d8571b8e88fe12a13dde35d80742d44'
            'd0e12ccb55961b0b58a0ef300a516ae959dc86546b53bba4dc0a419132106e2426c81826dbbda0b9932e8488bf0a44279b4615b93a6a05557929fccf9728c949'
            'ecfee599f6ed3e7b0ad5abbf21dbfccec67c1c5cd2f88bab787e174e111b07d7244bb08de9a8655789a3c825e772a88e41af17a00512c77772d58ce797824233'
            'd9224f2e044936e9122111ebd6046450cedb23cf4875059c26ac8704290fff95598db7c2e9795d3c48ef50068b737d1147768ece9fa6d6c824da22b8eef3f811')
b2sums=('0113e288906e3b5fa485c29c00e7df60d85addd96718c45531031a686f18c739fa18303b6cac374d35b85edb7b663e221c8dc9158dff08c75858a4ed4dd154bf'
        'SKIP'
        'fdd0439a935c2ab38ee1679608659fc09f158cf1de6ac6b22c18a39df1d427a197ea917281902de1fd6e367e4c5d78aec42083549635bdd28a4d218f33842a34'
        'cff98b8e864f7510dba332e6506c4955b7cd3af142b724993690aacbaa186b88796cfb1ca88492fe7e6f6688b66ed09a95a1d97a7e6f2966cd9efbe7d0333993'
        '792b2e48bc49221927e8c05282394d26cbd54f5f6f88ef2d702370a7a51d90700fee53f96467c66b76d91e8f338756f1b986dfb77a15fac61a9f6fe3f1e9c663'
        '7304c5852703e9d50ee5c79603dc4d4b7542f466645989f9803ad4173098ffd06646f24a6b0391871ab6810b888ffb8a6da557333d6a5d2aea3f1669721de39e'
        'ed3985c4c74de8dee582dedeb364d67af75a74979b29f428a3bc649ce822056e692bd80066a8b358e59e2bff4c1244149f845c032158c535b01877ae2323f2d3'
        'dbc733b121452f10ad53fe4bf13033fef8ca65460308d3135e986d00558be1783ada318cdda7311612b93dd49898d543ebfe7b85eb28c88c0480347372423855'
        '3a63fc385938e665619e0971498dd32559891eb00373f130f924996da2e1863cdc6f9acaa3999fe46daec3dcd22696e637e32af843d0bb9eea341f5aa4a5ad31'
        '184e2559aeeb91fda16600a7309a00b761ff7ac3271c6187b9674099902940a7a64d4f69cae26486938a6f780ff90615bbcf28ebda47592fc99e6961e2aa5700'
        'a4cb41fd81c95429ae8b8bb080d1ec969eb7ea612eb4a0006e0af6b65c7db1b7adb122f7b6e10796d909005138b23b96bb0b21d3b179b1a4c427c8b738a0f525')
validpgpkeys=('ECCAC84C1BA08A6CC8E63FBBF22FB1D78A77AEAB')    # Giancarlo Razzolini

prepare() {
 cd $_pkgname-$pkgver

 local src
  for src in "${source[@]}"; do
    src="${src%%::*}"
    src="${src##*/}"
    [[ $src = *.patch ]] || continue
    echo "Applying patch $src..."
    patch -Np1 < "../$src"
  done
}

check() {
  make -C "$_pkgname-$pkgver" check
}

package() {
  make -C "$_pkgname-$pkgver" DESTDIR="$pkgdir" install
}
