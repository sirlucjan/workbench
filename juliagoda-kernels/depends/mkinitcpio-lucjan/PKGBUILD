# Maintainer: Piotr Gorski <lucjan.lucjanov@gmail.com>
# Maintainer: Giancarlo Razzolini <grazzolini@archlinux.org>
# Maintainer: Dave Reisner <dreisner@archlinux.org>
# Maintainer: Thomas BÃ¤chler <thomas@archlinux.org>

pkgname=mkinitcpio-lucjan
_pkgname=mkinitcpio
pkgver=31
pkgrel=4
pkgdesc="Modular initramfs image creation utility"
arch=('any')
url='https://github.com/archlinux/mkinitcpio'
license=('GPL')
depends=('awk' 'mkinitcpio-busybox>=1.19.4-2' 'kmod' 'util-linux>=2.23' 'libarchive' 'coreutils'
         'bash' 'binutils' 'diffutils' 'findutils' 'grep' 'filesystem>=2011.10-1' 'zstd' 'systemd')
makedepends=('asciidoc')
optdepends=('gzip: Use gzip compression for the initramfs image'
            'xz: Use lzma or xz compression for the initramfs image'
            'bzip2: Use bzip2 compression for the initramfs image'
            'lzop: Use lzo compression for the initramfs image'
            'lz4: Use lz4 compression for the initramfs image'
            'mkinitcpio-nfs-utils: Support for root filesystem on NFS')
replaces=('mkinitcpio-zstd')
provides=('initramfs' 'initramfs-lucjan' 'initramfs-zstd' "mkinitcpio=$pkgver")
conflicts=('mkinitcpio')
backup=('etc/mkinitcpio.conf')
source=("https://sources.archlinux.org/other/$_pkgname/$_pkgname-$pkgver.tar.gz"{,.sig}
        "0001-Merge-mkinitcpio-libalpm-scripts-into-one.patch"
        "0002-functions-allow-tailing-for-custom-kernel-build-upon.patch")
install=mkinitcpio.install
sha512sums=('4ef87c2e4f579b292c38f9c487e78b3b99f6db77909cab322e860e5ca70aca3747fcfc272e2e15c9a3605c924ab178057b8b23151f98debc5d96e65f3c0c49d5'
            'SKIP'
            'fdbea0ad8f865bb7854a6c13684226dc2a1d66780b20238e0e94896e4487f52e6ecf0d07cfc3d6180eb64cc3732436b6e7473068473fcbe12d7832c565c646b1'
            'b651aa62820c8c3bb2c461c9a069d1b4410cbcf399d8a6cdae997e309b2dea06e7a89089d4be2c1f3aba42868ad7ebaa24222ecbb78e5a51762fb43386d243cb')
b2sums=('0113e288906e3b5fa485c29c00e7df60d85addd96718c45531031a686f18c739fa18303b6cac374d35b85edb7b663e221c8dc9158dff08c75858a4ed4dd154bf'
        'SKIP'
        'f2ecad5bb5f3db91df31d1abbf862e1aa8804aa58f881f3f13f25c998d6ab74506e6af8441fbd13a57da9f27bf5af8e244fa3340ef4bdbe47ff0b7e2b4249cb3'
        'b7ff57b600d716b071ca7ca40e62044395a5dd7140042d3fd9e3a1c1e77c1ab1a3d8b9d75cb93a0d831e747214589db39bdd4338b20d29dbd2066d3521e47a07')
validpgpkeys=('ECCAC84C1BA08A6CC8E63FBBF22FB1D78A77AEAB')    # Giancarlo Razzolini

prepare() {
 cd $_pkgname-$pkgver

 local src
  for src in "${source[@]}"; do
    src="${src%%::*}"
    src="${src##*/}"
    [[ $src = *.patch ]] || continue
    echo "Applying patch $src..."
    patch -Np1 < "../$src"
  done
}

check() {
  make -C "$_pkgname-$pkgver" check
}

package() {
  make -C "$_pkgname-$pkgver" DESTDIR="$pkgdir" install
}
