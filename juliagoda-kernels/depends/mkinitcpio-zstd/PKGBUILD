# Maintainer: Piotr Gorski <lucjan.lucjanov@gmail.com>
# Maintainer: Giancarlo Razzolini <grazzolini@archlinux.org>
# Maintainer: Dave Reisner <dreisner@archlinux.org>
# Maintainer: Thomas BÃ¤chler <thomas@archlinux.org>

pkgname=mkinitcpio-zstd
_pkgname=mkinitcpio
pkgver=30
pkgrel=2
pkgdesc="Modular initramfs image creation utility"
arch=('any')
url="https://projects.archlinux.org/mkinitcpio.git/"
license=('GPL')
depends=('awk' 'mkinitcpio-busybox>=1.19.4-2' 'kmod' 'util-linux>=2.23' 'libarchive' 'coreutils'
         'bash' 'diffutils' 'findutils' 'grep' 'filesystem>=2011.10-1' 'zstd' 'systemd')
makedepends=('asciidoc')
optdepends=('gzip: Use gzip compression for the initramfs image'
            'xz: Use lzma or xz compression for the initramfs image'
            'bzip2: Use bzip2 compression for the initramfs image'
            'lzop: Use lzo compression for the initramfs image'
            'lz4: Use lz4 compression for the initramfs image'
            'mkinitcpio-nfs-utils: Support for root filesystem on NFS')
provides=('initramfs' 'initramfs-zstd' "mkinitcpio=$pkgver")
conflicts=('mkinitcpio')
backup=('etc/mkinitcpio.conf')
source=("https://sources.archlinux.org/other/$_pkgname/$_pkgname-$pkgver.tar.gz"{,.sig}
        "0001-Add-zstd-module-decompression.patch"
        "0002-Silence-messages-in-zstd-format.patch"
        "0003-Add-rm-flag-to-minimize-the-size-of-initramfs.patch")
install=mkinitcpio.install
sha512sums=('ef43a8ddc01697fa43bede4eebad3271bbc89efa57ba7e4e9f321e8174ff2af74d857b308c5c0f37b42a91906c91c1b022f9a651c70d5d3e9dfc8dc441a60ee4'
            'SKIP'
            '1ec9e8ff7a20acbc175b133514257693e28bb953e9b5dbe766b6d41c386e87668c13d49bb5038a9016a9a5dc6a82801110f2df5aa88b43f06e5f1af731dc2589'
            'f78e97915a92623cc3eb6b260f2b6d7665ab7901e768336f071288074963ab10714e8cafff552599a7b37a60c226a07b7ee3feb991006d0ada1b1c9d48972603'
            '1506165a15676c634d7f99580e4589906bcac05a9d02152586a532a6786f46a0d1a46b212ad918b5a31fe022ac29a1112a4ecdffc0f2efa84767ee56283f04a3')
b2sums=('2001f9ac12bfa7369ad32842956cd21b2a786cd28133b6d3256e4aa77210c78ec6cac8a710ff8c2feb5a4797c1a33ce8c8c7dfabd84d7927c08bf8377e330300'
        'SKIP'
        '603ffd0dc83c161eb041f4deb06794734439a33dddc88d61b9afe4d96356ac30aeaf4de6c79148a17f8059e76b51bb605351ae60805ca1fce3ed6fa9f6eb05d8'
        'ea6c408d23a889e3ac59b25f6496a2289c75a08cb03e6faaaa84238c1112605deda1e59a4499a084cf18e30d091de320f0a883241d034b5c132136dc596a6d01'
        '3ed5c604148d4eae4dfd62bf58652cb77a5e2f0e88ac4a32901abd1a4305b3e4207018a2bd6ad4f9a37079174c99a5b1f62e71915fbece34cd047f4ffcef5f91')
validpgpkeys=('ECCAC84C1BA08A6CC8E63FBBF22FB1D78A77AEAB'    # Giancarlo Razzolini
              '86CFFCA918CF3AF47147588051E8B148A9999C34')   # Evangelos Foutras

prepare() {
 cd $_pkgname-$pkgver

 local src
  for src in "${source[@]}"; do
    src="${src%%::*}"
    src="${src##*/}"
    [[ $src = *.patch ]] || continue
    echo "Applying patch $src..."
    patch -Np1 < "../$src"
  done
}

check() {
  make -C "$_pkgname-$pkgver" check
}

package() {
  make -C "$_pkgname-$pkgver" DESTDIR="$pkgdir" install
}
